apiVersion: v1
kind: Service
metadata:
  name: #{projectName}#
  labels:
    app: #{projectName}#
spec:
  ports:
  - port: 80
    name: rest
    targetPort: rest
  selector:
    name: #{projectName}#
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: #{projectName}#
spec:
  replicas: #{replicaCount}#
  selector:
    matchLabels:
      name: #{projectName}#
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        name: #{projectName}#
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "name"
                    operator: In
                    values:
                    - #{projectName}#
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: #{projectName}#
        image: #{acrServer}#/#{projectName}#:#{Build.BuildNumber}#
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 40m
            memory: 50Mi
        ports:
        - containerPort: 80
          name: rest
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: #{environment}#